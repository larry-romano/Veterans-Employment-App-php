<?php
//adds a user to the database
//receives username, password, and role (either veteran or employer)
//returns a json object containing the userid generated by the database for that user and the role (either veteran or employer)

require_once("connect_safer.php");
$dbh = ConnectDB();


    try {
       class User {
          public $id;
          public $role;
          // Assigning the values
          public function __construct($id, $role)
          {
              $this->id        = $id;
              $this->role      = $role;
          }
       }
      $query = "SELECT * FROM verify WHERE Username = :un";

      $stmt = $dbh->prepare($query);

      $username =      $_POST["username"];
      $stmt->bindParam('un', $username);
      $stmt->execute();


     
      $findUser = $stmt->fetchAll(PDO::FETCH_OBJ);

      $howmany = count($findUser);
      //ensure there is no username existant already
      //if none exists add it, otherwise return null
      if ($howmany == 0){

        $query = "INSERT INTO verify (Username, Password, Role) ".
                 "VALUES (:un,:pw,:rl);";

        $stmt = $dbh->prepare($query);

        $password =      $_POST["password"];
        $role     =      $_POST["role"];

        $stmt->bindParam('un', $username);
        $stmt->bindParam('pw', $password);
        $stmt->bindParam('rl', $role);
        $stmt->execute();
        $query = "SELECT * FROM verify WHERE Username = :un";

        $stmt = $dbh->prepare($query);
        $stmt->bindParam('un', $username);
        $stmt->execute();


        // There should only be one, but this means if we get
        // more than one match we can find out easily.
        $userdata = $stmt->fetchAll(PDO::FETCH_OBJ);

        $howmany = count($userdata);
        if ($howmany > 0){
          foreach ($userdata as $g_info) {
              // Retrieve contents of each row
              $userList[] = new User($g_info->id,
                                     $g_info->Role);
          }
        }
        echo json_encode($userList);

    }
    } catch(PDOException $e) {
        die ('PDO error in ListMatchingPhones(): ' . $e->getMessage() );
    }

?>
